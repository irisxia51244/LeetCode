/**
 * 366，【Medium】，【Tree】【DFS】
 * LeetCode 366. Find Leaves of Binary Tree
 * Related Topics: Tree, DFS
 * @author Iris Xia
 * Time Complexity: O(), Space Complexity: O();
 */

class Solution {
    public List<List<Integer>> findLeaves(TreeNode root) {
        List<List<Integer>> res = new ArrayList<>();
        if(root == null) return res;
        helper(root, res);
        return res;
    }
    
    private int helper(TreeNode node, List<List<Integer>> res){
        if(node == null) return -1;
        int left = helper(node.left, res);
        int right = helper(node.right, res);
        int level = Math.max(left, right) + 1;
        if(res.size() == level){
            res.add(new ArrayList<Integer>());
        }
        res.get(level).add(node.val);
        node = null;
        return level;
    }
}
